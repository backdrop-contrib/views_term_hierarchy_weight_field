<?php

/**
 * Implements hook_views_api().
 */
function views_term_hierarchy_weight_field_views_api() {
  return array('api' => 3);
}

/**
 * Implements hook_formid_alter().
 */
function views_term_hierarchy_weight_field_form_taxonomy_overview_terms_alter(&$form, $form_state) {
  $form['#submit'][] = 'views_term_hierarchy_weight_field_submit';
}

/**
 * Custom submit handler that saves the hierarchical weight.
 */
function views_term_hierarchy_weight_field_submit($form, &$form_state) {
  $operations = array();
  foreach (array_values($form_state['input']) as $hweight => $term) {
    if (is_array($term)) {
      $hdepth = count(taxonomy_get_parents_all($term['tid'])) - 1;
      $operations[] = array('views_term_hierarchy_weight_field_update_hweight', array($term['tid'], $hweight));
      $operations[] = array('views_term_hierarchy_weight_field_update_hdepth', array($term['tid'], $hdepth));
    }
  }

  $batch = array(
    'operations' => $operations,
    'title' => t('Computing the weight and depth of each term...'),
    'init_message' => t('Initializing'),
    'error_message' => t('An error occurred'),
  );

  batch_set($batch);
}

/**
 * Implements hook_taxonomy_term_insert().
 */
function views_term_hierarchy_weight_field_taxonomy_term_insert($term) {
  $operations = array();
  foreach (taxonomy_get_tree($term->vid) as $hweight => $term) {
    $hdepth = count(taxonomy_get_parents_all($term->tid)) - 1;
    $operations[] = array('views_term_hierarchy_weight_field_update_hweight', array($term->tid, $hweight));
    $operations[] = array('views_term_hierarchy_weight_field_update_hdepth', array($term->tid, $hdepth));
  }

  $batch = array(
    'operations' => $operations,
    'title' => t('Computing the weight and depth of each term...'),
    'init_message' => t('Initializing'),
    'error_message' => t('An error occurred'),
  );

  batch_set($batch);
}

/**
 * API function, set the hierarchical weight of a term.
 *
 * @param int $tid
 *   The Term ID
 * @param int $hweight
 *   The weight
 */
function views_term_hierarchy_weight_field_update_hweight($tid, $hweight) {
  if (!is_numeric($tid) || !is_numeric($hweight)) {
    return;
  }

  db_update('taxonomy_term_data')
    ->fields(array('hweight' => $hweight))
    ->condition('tid', $tid, '=')
    ->execute();
}

/**
 * API function, set the hierarchical depth of a term.
 *
 * @param int $tid
 *   The Term ID
 * @param int $hdepth
 *   The term depth
 */
function views_term_hierarchy_weight_field_update_hdepth($tid, $hdepth) {
  if (!is_numeric($tid) || !is_int($hdepth)) {
    return;
  }

  db_update('taxonomy_term_data')
    ->fields(array('hdepth' => $hdepth))
    ->condition('tid', $tid, '=')
    ->execute();
}
